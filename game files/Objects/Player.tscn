[gd_scene load_steps=25 format=2]

[ext_resource path="res://Code/head.gd" type="Script" id=1]
[ext_resource path="res://Code/Player.gd" type="Script" id=2]
[ext_resource path="res://Code/UI.gd" type="Script" id=3]
[ext_resource path="res://Audio/SwordSwings/swordWhoosh.wav" type="AudioStream" id=4]
[ext_resource path="res://Objects/UI/Inventory.tscn" type="PackedScene" id=6]
[ext_resource path="res://Objects/UI/Crosshair.tscn" type="PackedScene" id=7]
[ext_resource path="res://Objects/UI/HealthBar.tscn" type="PackedScene" id=8]

[sub_resource type="CapsuleShape" id=2]
height = 2.0

[sub_resource type="CylinderShape" id=4]
height = 1.0

[sub_resource type="BoxShape" id=7]
extents = Vector3( 1, 1, 2 )

[sub_resource type="Animation" id=18]
resource_name = "KnifeSwing"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("hand:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 0.9, 1.1, 1.2, 1.4, 1.5, 1.7 ),
"transitions": PoolRealArray( 1, 4.59479, 1, 5.09824, 1, 6.49801, 1, 5.09824, 1, 6.49801, 1 ),
"update": 0,
"values": [ Vector3( 0.293, -0.178, -0.302 ), Vector3( 0.31, -0.159, -0.312 ), Vector3( -0.184, -0.22, -0.312 ), Vector3( -0.184, -0.307, -0.349 ), Vector3( 0.313, -0.243, -0.329 ), Vector3( 0.225, -0.113, -0.361 ), Vector3( -0.228, -0.149, -0.394 ), Vector3( -0.184, -0.307, -0.349 ), Vector3( 0.313, -0.243, -0.329 ), Vector3( 0.225, -0.113, -0.361 ), Vector3( -0.228, -0.149, -0.394 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("hand:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 0.9, 1.1, 1.2, 1.4, 1.5, 1.7 ),
"transitions": PoolRealArray( 1, 4.59479, 1, 5.09824, 1, 6.49801, 1, 5.09824, 1, 6.49801, 1 ),
"update": 0,
"values": [ Vector3( 0, -3.913, 0 ), Vector3( 5.418, -3.913, 0 ), Vector3( -20, 45, -30 ), Vector3( -20, 45, 30 ), Vector3( -20, -30, 30 ), Vector3( 20, -5, -40 ), Vector3( 0, 60, -90 ), Vector3( -20, 45, 30 ), Vector3( -20, -30, 30 ), Vector3( 20, -5, -40 ), Vector3( 0, 60, -90 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("..")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.3, 0.4, 0.7, 0.8, 1, 1.1, 1.3, 1.4, 1.6, 1.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"values": [ {
"args": [ 1 ],
"method": "dealDamage"
}, {
"args": [  ],
"method": "stopAttacking"
}, {
"args": [ 1 ],
"method": "dealDamage"
}, {
"args": [  ],
"method": "stopAttacking"
}, {
"args": [ 1 ],
"method": "dealDamage"
}, {
"args": [  ],
"method": "stopAttacking"
}, {
"args": [ 1 ],
"method": "dealDamage"
}, {
"args": [  ],
"method": "stopAttacking"
}, {
"args": [ 1 ],
"method": "dealDamage"
}, {
"args": [  ],
"method": "stopAttacking"
} ]
}
tracks/3/type = "audio"
tracks/3/path = NodePath("hand/AudioStreamPlayer")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
} ],
"times": PoolRealArray( 0.3, 0.7, 1, 1.3, 1.6 )
}

[sub_resource type="Animation" id=11]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("hand:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0.293, -0.178, -0.302 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("hand:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, -3.913, 0 ) ]
}

[sub_resource type="Animation" id=10]
resource_name = "axeSwing"
length = 3.3
loop = true
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath("hand:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.12, 0.3, 0.7, 0.83, 1.1, 1.3, 1.7, 2.3, 2.5, 2.8, 3 ),
"transitions": PoolRealArray( 1, 0.0796602, 2.63901, 0.233258, 1, 0.07966, 0.420448, 1, 17.1484, 1, 1 ),
"update": 0,
"values": [ Vector3( 0.293, -0.016, -0.339 ), Vector3( 0.293, -0.016, -0.339 ), Vector3( -0.223, -0.157, -0.303 ), Vector3( -0.223, -0.157, -0.303 ), Vector3( -0.337, -0.157, -0.34 ), Vector3( -0.337, -0.157, -0.34 ), Vector3( 0.292, -0.157, -0.384 ), Vector3( 0.293, 0.183, -0.334 ), Vector3( 0.293, 0.183, -0.334 ), Vector3( -0.279, -0.225, -0.311 ), Vector3( -0.279, -0.225, -0.311 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("hand:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.12, 0.3, 0.7, 0.83, 1.1, 1.3, 1.7, 2.3, 2.5, 2.8, 3 ),
"transitions": PoolRealArray( 1, 0.07966, 2.63901, 0.233258, 1, 0.07966, 0.420448, 1, 17.1484, 1, 1 ),
"update": 0,
"values": [ Vector3( 45, -3.913, -30 ), Vector3( 45, -3.913, -30 ), Vector3( 0, 80, -90 ), Vector3( 0, 80, -90 ), Vector3( 0, 60, 43.059 ), Vector3( 0, 60, 43.059 ), Vector3( 0, -30, 90 ), Vector3( 60, -3.913, -30 ), Vector3( 60, -3.913, -30 ), Vector3( 0, 80, -60 ), Vector3( 0, 80, -60 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("..")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.39, 0.83, 1.42, 1.7, 2.67, 3 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"values": [ {
"args": [ 1 ],
"method": "dealDamage"
}, {
"args": [  ],
"method": "stopAttacking"
}, {
"args": [ 1 ],
"method": "dealDamage"
}, {
"args": [  ],
"method": "stopAttacking"
}, {
"args": [ 3 ],
"method": "dealDamage"
}, {
"args": [  ],
"method": "stopAttacking"
} ]
}
tracks/3/type = "audio"
tracks/3/path = NodePath("hand/AudioStreamPlayer")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
} ],
"times": PoolRealArray( 0.26, 1.38, 2.6 )
}

[sub_resource type="SphereMesh" id=12]
radius = 0.05
height = 0.1

[sub_resource type="SpatialMaterial" id=16]
albedo_color = Color( 1, 0.854902, 0.619608, 1 )

[sub_resource type="CapsuleMesh" id=13]
radius = 0.05
mid_height = 0.5

[sub_resource type="SpatialMaterial" id=17]
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="Shader" id=22]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float Glow_Power : hint_range(0,10) = 3;
uniform float Lightness_Difference : hint_range(0,10) = 3;
uniform vec4 Sun_Color : hint_color;

uniform sampler2D voronoi_noise;
uniform sampler2D emission_noise;
varying vec3 vertex_pos;
uniform float waveSpeed : hint_range(0,1) = 0.1;
uniform float fresnel : hint_range(0,2) = 1.0;

uniform float scale : hint_range(0,2) = 0.01;
uniform float blendSharpness : hint_range(0,2) = 0.0;

// TRIPLANAR FUNCTION
vec4 triplanar_texture(vec3 position, vec3 normal, vec2 offset, sampler2D noise) {
	vec4 colX = texture(noise, position.xy * scale + offset);
	vec4 colY = texture(noise, position.xz * scale + offset);
	vec4 colZ = texture(noise, position.zy * scale + offset);
	
	vec3 blendWeight = abs(normal);
	blendWeight = vec3(pow(blendWeight.x, blendSharpness), pow(blendWeight.y, blendSharpness), pow(blendWeight.z, blendSharpness));
	blendWeight /= (blendWeight.x + blendWeight.y + blendWeight.z);
	
	return colX * blendWeight.x + colY * blendWeight.y + colZ * blendWeight.z;
}

void vertex() {
	vertex_pos = VERTEX;
}

void fragment() {
	ALBEDO = vec3(0,0,0);
	// Fresnel
	float fresnel_out = pow(fresnel - clamp(dot(NORMAL, VIEW), 0.0, fresnel), fresnel);

	vec2 waveOffsetA = vec2(TIME * waveSpeed, TIME * waveSpeed * 0.8);
	vec2 waveOffsetB = vec2(TIME * waveSpeed * - 0.8, TIME * waveSpeed * -0.3);
	vec2 result_offset = waveOffsetA + waveOffsetB;

	vec3 cloud_tex = triplanar_texture(vertex_pos, NORMAL, result_offset, voronoi_noise).rgb;
	vec3 cloud_tex_with_light = cloud_tex * vec3(Lightness_Difference);
	vec3 cloud_tex_with_light_with_color = cloud_tex_with_light * Sun_Color.rgb;
	vec3 cloud_tex_with_light_with_color_with_glow = vec3(Glow_Power) * cloud_tex_with_light_with_color;

	vec3 noise_tex = triplanar_texture(vertex_pos, NORMAL, result_offset, emission_noise).rgb;
	vec3 result = cloud_tex_with_light_with_color_with_glow * noise_tex;

	EMISSION = vec3(fresnel_out) * result;
}"

[sub_resource type="OpenSimplexNoise" id=29]
period = 218.7
persistence = 0.255
lacunarity = 1.34

[sub_resource type="NoiseTexture" id=25]
seamless = true
noise = SubResource( 29 )

[sub_resource type="OpenSimplexNoise" id=30]
period = 15.3
persistence = 0.0
lacunarity = 1.26

[sub_resource type="NoiseTexture" id=27]
seamless = true
noise = SubResource( 30 )

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 22 )
shader_param/Glow_Power = 0.824
shader_param/Lightness_Difference = 2.88
shader_param/Sun_Color = Color( 1, 0, 0, 1 )
shader_param/waveSpeed = 0.299
shader_param/fresnel = 0.591
shader_param/scale = 0.796
shader_param/blendSharpness = 2.0
shader_param/voronoi_noise = SubResource( 27 )
shader_param/emission_noise = SubResource( 25 )

[sub_resource type="CapsuleMesh" id=3]
material = SubResource( 23 )
mid_height = 2.0

[node name="Player" type="KinematicBody"]
script = ExtResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
shape = SubResource( 2 )

[node name="CollisionShape2" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.5, 0 )
shape = SubResource( 4 )

[node name="head" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )
script = ExtResource( 1 )

[node name="Camera" type="Camera" parent="head"]
fov = 90.0
far = 1500.0

[node name="interactCast" type="RayCast" parent="head"]
enabled = true
cast_to = Vector3( 0, 0, -6 )

[node name="attackHitbox" type="Area" parent="head"]

[node name="CollisionShape" type="CollisionShape" parent="head/attackHitbox"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -2.8 )
shape = SubResource( 7 )

[node name="attackAnimations" type="AnimationPlayer" parent="head"]
anims/KnifeSwing = SubResource( 18 )
anims/RESET = SubResource( 11 )
anims/axeSwing = SubResource( 10 )

[node name="hand" type="Spatial" parent="head"]
transform = Transform( 0.997669, 0, -0.0682417, 0, 1, 0, 0.0682417, 0, 0.997669, 0.293, -0.178, -0.302 )

[node name="Weapon" type="Spatial" parent="head/hand"]

[node name="hand" type="MeshInstance" parent="head/hand"]
transform = Transform( 0.997671, 0, 0.0682418, 0, 1, 0, -0.0682418, 0, 0.997671, 0.00712055, -0.022, 0.00151715 )
cast_shadow = 0
mesh = SubResource( 12 )
skeleton = NodePath("../../..")
material/0 = SubResource( 16 )

[node name="arm" type="MeshInstance" parent="head/hand/hand"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.299999 )
cast_shadow = 0
mesh = SubResource( 13 )
skeleton = NodePath("../../../..")
material/0 = SubResource( 17 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="head/hand"]
stream = ExtResource( 4 )
pitch_scale = 2.0

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
cast_shadow = 0
mesh = SubResource( 3 )

[node name="floorCast" type="RayCast" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
enabled = true
cast_to = Vector3( 0, -2, 0 )

[node name="OmniLight" type="OmniLight" parent="."]
light_color = Color( 0.828125, 0.828125, 1, 1 )
light_energy = 0.5
omni_range = 26.0
omni_attenuation = 1.6818

[node name="UI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 3 )

[node name="Crosshair" parent="UI" instance=ExtResource( 7 )]

[node name="HealthBar" parent="UI" instance=ExtResource( 8 )]

[node name="Inventory" parent="UI" instance=ExtResource( 6 )]
visible = false

[node name="screenFade" type="ColorRect" parent="UI"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )
