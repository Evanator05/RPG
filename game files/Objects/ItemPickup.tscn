[gd_scene load_steps=13 format=2]

[ext_resource path="res://Code/ItemPickup.gd" type="Script" id=1]

[sub_resource type="BoxShape" id=43]
extents = Vector3( 0.2, 0.2, 0.2 )

[sub_resource type="Shader" id=37]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float Glow_Power : hint_range(0,10) = 3;
uniform float Lightness_Difference : hint_range(0,10) = 3;
uniform vec4 Sun_Color : hint_color;

uniform sampler2D voronoi_noise;
uniform sampler2D emission_noise;
varying vec3 vertex_pos;
uniform float waveSpeed : hint_range(0,1) = 0.1;
uniform float fresnel : hint_range(0,2) = 1.0;

uniform float scale : hint_range(0,2) = 0.01;
uniform float blendSharpness : hint_range(0,2) = 0.0;

// TRIPLANAR FUNCTION
vec4 triplanar_texture(vec3 position, vec3 normal, vec2 offset, sampler2D noise) {
	vec4 colX = texture(noise, position.xy * scale + offset);
	vec4 colY = texture(noise, position.xz * scale + offset);
	vec4 colZ = texture(noise, position.zy * scale + offset);
	
	vec3 blendWeight = abs(normal);
	blendWeight = vec3(pow(blendWeight.x, blendSharpness), pow(blendWeight.y, blendSharpness), pow(blendWeight.z, blendSharpness));
	blendWeight /= (blendWeight.x + blendWeight.y + blendWeight.z);
	
	return colX * blendWeight.x + colY * blendWeight.y + colZ * blendWeight.z;
}

void vertex() {
	vertex_pos = VERTEX;
}

void fragment() {
	ALBEDO = vec3(0,0,0);
	// Fresnel
	float fresnel_out = pow(fresnel - clamp(dot(NORMAL, VIEW), 0.0, fresnel), fresnel);

	vec2 waveOffsetA = vec2(TIME * waveSpeed, TIME * waveSpeed * 0.8);
	vec2 waveOffsetB = vec2(TIME * waveSpeed * - 0.8, TIME * waveSpeed * -0.3);
	vec2 result_offset = waveOffsetA + waveOffsetB;

	vec3 cloud_tex = triplanar_texture(vertex_pos, NORMAL, result_offset, voronoi_noise).rgb;
	vec3 cloud_tex_with_light = cloud_tex * vec3(Lightness_Difference);
	vec3 cloud_tex_with_light_with_color = cloud_tex_with_light * Sun_Color.rgb;
	vec3 cloud_tex_with_light_with_color_with_glow = vec3(Glow_Power) * cloud_tex_with_light_with_color;

	vec3 noise_tex = triplanar_texture(vertex_pos, NORMAL, result_offset, emission_noise).rgb;
	vec3 result = cloud_tex_with_light_with_color_with_glow * noise_tex;

	EMISSION = vec3(fresnel_out) * result;
}"

[sub_resource type="OpenSimplexNoise" id=29]
period = 218.7
persistence = 0.255
lacunarity = 1.34

[sub_resource type="NoiseTexture" id=38]
seamless = true
noise = SubResource( 29 )

[sub_resource type="OpenSimplexNoise" id=30]
period = 15.3
persistence = 0.0
lacunarity = 1.26

[sub_resource type="NoiseTexture" id=39]
seamless = true
noise = SubResource( 30 )

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 37 )
shader_param/Glow_Power = 0.824
shader_param/Lightness_Difference = 2.88
shader_param/Sun_Color = Color( 1, 0, 0, 1 )
shader_param/waveSpeed = 0.299
shader_param/fresnel = 0.591
shader_param/scale = 0.796
shader_param/blendSharpness = 2.0
shader_param/voronoi_noise = SubResource( 39 )
shader_param/emission_noise = SubResource( 38 )

[sub_resource type="SphereMesh" id=40]
material = SubResource( 23 )
radius = 0.25
height = 0.5

[sub_resource type="ParticlesMaterial" id=41]
emission_shape = 2
emission_box_extents = Vector3( 0.4, 0, 0.4 )
gravity = Vector3( 0, 1, 0 )

[sub_resource type="ShaderMaterial" id=36]
shader = SubResource( 37 )
shader_param/Glow_Power = 0.824
shader_param/Lightness_Difference = 2.88
shader_param/Sun_Color = Color( 1, 0, 0, 1 )
shader_param/waveSpeed = 0.5
shader_param/fresnel = 0.995
shader_param/scale = 2.0
shader_param/blendSharpness = 2.0
shader_param/voronoi_noise = SubResource( 39 )
shader_param/emission_noise = SubResource( 38 )

[sub_resource type="SphereMesh" id=42]
material = SubResource( 36 )
radius = 0.02
height = 0.04

[node name="ItemPickup" type="StaticBody"]
script = ExtResource( 1 )

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 43 )

[node name="orb" type="MeshInstance" parent="."]
mesh = SubResource( 40 )
material/0 = null

[node name="Particles" type="Particles" parent="."]
lifetime = 1.3
visibility_aabb = AABB( -0.8, -1, -0.8, 1.6, 2, 1.6 )
process_material = SubResource( 41 )
draw_pass_1 = SubResource( 42 )

[node name="OmniLight" type="OmniLight" parent="."]
light_color = Color( 1, 0, 0, 1 )
light_energy = 3.256
omni_range = 2.782
omni_attenuation = 3.4822
